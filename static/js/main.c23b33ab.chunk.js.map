{"version":3,"sources":["components/layout/header/logo.svg","components/layout/header/index.js","components/layout/header/header.js","components/layout/social/social-item.js","components/layout/social/index.js","components/layout/social/social.js","components/pages/home/index.js","components/pages/home/home.js","components/common/reference.js","components/layout/portfolio-item/index.js","components/layout/portfolio-item/portfolio-item.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/layout/spinner/index.js","components/layout/spinner/spinner.js","utills/fetchData.js","components/hoc-helpers/with-data/index.js","components/hoc-helpers/with-data/with-data.js","components/pages/portfolio/index.js","components/pages/portfolio/portfolio.js","components/layout/progress-bar/index.js","components/layout/progress-bar/progress-bar.js","components/pages/skills/index.js","components/pages/skills/skills.js","components/pages/contacts/index.js","components/pages/contacts/contacts.js","components/app/particles-options.js","components/app/index.js","components/app/app.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","linkListRef","React","createRef","burgerButtonRef","className","to","src","logo","alt","style","width","height","ref","onClick","current","classList","toggle","SocialItem","href","type","aria-label","target","rel","aria-hidden","Social","Home","Reference","children","classes","PortfolioItem","data","title","image","skills","link","repository","ErrorIndicator","Spinner","fetchData","url","a","fetch","res","json","withData","ViewComponent","dataUrl","insertBefore","useState","setData","loading","setLoading","error","setError","useEffect","getData","handleError","then","catch","hasData","Portfolio","map","work","key","id","ProgressBar","skill","percent","Skills","Contacts","particlesStyles","position","left","zIndex","top","particlesOptions","particles","number","value","density","enable","value_area","color","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","params","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c23b33ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.92f673d7.svg\";","import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\nimport logo from './logo.svg';\r\n\r\nconst Header = props => {\r\n  const linkListRef = React.createRef();\r\n  const burgerButtonRef = React.createRef();\r\n\r\n  const toggleMobileNav = () => {\r\n    linkListRef.current.classList.toggle('active-mobile-nav');\r\n    burgerButtonRef.current.classList.toggle('active');\r\n  };\r\n\r\n  return (\r\n    <header className='header-app'>\r\n      <div className='wrapper'>\r\n        <nav className='navbar-app'>\r\n          <Link to='/' className='logo'>\r\n            <img\r\n              src={logo}\r\n              alt='logo'\r\n              style={{ width: '50px', height: '50px' }}\r\n            />\r\n          </Link>\r\n          <ul className='links-list' ref={linkListRef}>\r\n            <li>\r\n              <Link className='link' to=''>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='link' to='/portfolio'>\r\n                Portfolio\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='link' to='/skills'>\r\n                Skills\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='link' to='/contacts'>\r\n                Contacts\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className='toggle-mobile-navbar'\r\n            onClick={toggleMobileNav}\r\n            ref={burgerButtonRef}\r\n          >\r\n            <span className='burger-span'></span>\r\n            <span className='burger-span'></span>\r\n            <span className='burger-span'></span>\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst SocialItem = ({ href, type }) => {\r\n  return (\r\n    <li className='social-item'>\r\n      <a\r\n        href={href}\r\n        aria-label={`Link to ${type}`}\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n      >\r\n        <i className={`fab fa-${type}`} aria-hidden='true'></i>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SocialItem;\r\n","import Social from './social';\r\n\r\nexport default Social;\r\n","import React from 'react';\r\nimport SocialItem from './social-item';\r\nimport './social.css';\r\n\r\nconst Social = () => {\r\n  return (\r\n    <ul className='social-list'>\r\n      <SocialItem href='https://github.com/kamenivskyi' type='github' />\r\n      <SocialItem\r\n        href='https://www.linkedin.com/in/roman-kamenivskyi-524425194/'\r\n        type='linkedin'\r\n      />\r\n      <SocialItem href='https://t.me/Kamenivskyi' type='telegram' />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Social;\r\n","import Home from './home';\r\nexport default Home;\r\n","import React from 'react';\r\nimport Social from '../../layout/social';\r\nimport './home.css';\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className='introduction-page'>\r\n      <h1 className='name'>\r\n        <span className='name-top'>Roman</span>\r\n        <span className='name-bottom'>Kamenivskyi</span>\r\n      </h1>\r\n      <p className='text-intro'>\r\n        Hello<span className='c-white'>,</span> i am junior{' '}\r\n        <span className='c-white work-position'>front end developer !</span>\r\n      </p>\r\n      <Social />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Reference = ({ children, classes, href }) => {\r\n  return (\r\n    <a\r\n      href={href}\r\n      className={classes}\r\n      target='_blank'\r\n      rel='noopener noreferrer'\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nReference.propTypes = {\r\n  classes: PropTypes.string,\r\n  href: PropTypes.string\r\n};\r\n","import PortfolioItem from './portfolio-item';\r\nexport default PortfolioItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Reference } from '../../common/reference';\r\nimport './portfolio-item.css';\r\n\r\nconst PortfolioItem = ({ data }) => {\r\n  const { title, image, skills, link, repository } = data;\r\n  return (\r\n    <div className='portfolio-item'>\r\n      <img className='portfolio-face' src={image} alt={title} />\r\n      <div className='portfolio-descr portfolio-face back'>\r\n        <Reference href={link} classes='portfolio-title'>\r\n          {title}\r\n        </Reference>\r\n        <p className='portfolio-skills'>{skills}</p>\r\n        <Reference href={repository} classes='portfolio-repo'>\r\n          Repository\r\n        </Reference>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPortfolioItem.propTypes = {\r\n  data: PropTypes.object\r\n};\r\n\r\nexport default PortfolioItem;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className='error'>\r\n      <i className='fas fa-exclamation-triangle error-icon'></i>\r\n      <p className='error-text'>Something went wrong!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return <div className='spinner'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","export const fetchData = async url => {\r\n  const baseUrl =\r\n    'https://raw.githubusercontent.com/Kamenivskyi/portfolio/master/src/db';\r\n  const res = await fetch(`${baseUrl}${url}`);\r\n  return res.json();\r\n};\r\n","import withData from './with-data';\r\n\r\nexport default withData;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ErrorIndicator from '../../error-indicator';\r\nimport Spinner from '../../layout/spinner';\r\nimport { fetchData } from '../../../utills/fetchData';\r\n\r\nconst withData = (ViewComponent, dataUrl, insertBefore) => {\r\n  return props => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n      getData(dataUrl);\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleError = error => {\r\n      setError(true);\r\n      setLoading(false);\r\n    };\r\n\r\n    const getData = url => {\r\n      setLoading(true);\r\n      fetchData(url)\r\n        .then(({ data }) => {\r\n          setData(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(handleError);\r\n    };\r\n\r\n    const hasData = !(error || loading);\r\n\r\n    return (\r\n      <>\r\n        {insertBefore}\r\n        {error && <ErrorIndicator />}\r\n        {loading && <Spinner />}\r\n        {hasData && <ViewComponent {...props} data={data} />}\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withData;\r\n","import Portfolio from './portfolio';\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PortfolioItem from '../../layout/portfolio-item';\r\nimport withData from '../../hoc-helpers/with-data';\r\nimport './portfolio.css';\r\n\r\nconst Portfolio = ({ data }) => {\r\n  return (\r\n    <>\r\n      {\r\n        <ul className='portfolio-list'>\r\n          {data.map(work => {\r\n            return (\r\n              <li className='flip' key={work.id}>\r\n                <PortfolioItem data={work} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n};\r\nconst title = <h2 className='section-title'>Portfolio</h2>;\r\n\r\nPortfolio.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default withData(Portfolio, '/works.json', title);\r\n","import ProgressBar from './progress-bar';\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './progress-bar.css';\r\n\r\nconst ProgressBar = ({ data: { skill, percent } }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div className='progress-value' style={{ width: percent }}></div>\r\n      <span className='progress-skill-name'>{skill}</span>\r\n      <span className='progress-percent'>{percent}</span>\r\n    </div>\r\n  );\r\n};\r\nProgressBar.propTypes = {\r\n  data: PropTypes.object\r\n};\r\nexport default ProgressBar;\r\n","import Skills from './skills';\r\nexport default Skills;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProgressBar from '../../layout/progress-bar';\r\nimport withData from '../../hoc-helpers/with-data';\r\nimport './skills.css';\r\n\r\nconst Skills = ({ data }) => {\r\n  return (\r\n    <>\r\n      <ul className='skills-list'>\r\n        {data.map(skill => {\r\n          return (\r\n            <li className='skill-item' key={skill.id}>\r\n              <ProgressBar data={skill} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst title = <h2 className='section-title'>Skills</h2>;\r\n\r\nSkills.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default withData(Skills, '/skills.json', title);\r\n","import Contacts from './contacts';\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport Social from '../../layout/social';\r\nimport './contacts.css';\r\n\r\nconst Contacts = props => {\r\n  return (\r\n    <div className='contacts-wrapper'>\r\n      <h2 className='section-title'>Contacts</h2>\r\n      <div className='contacts'>\r\n        <p>You can contact me below &#8595;</p>\r\n        <span className='mail'>\r\n          E-mail: &nbsp;\r\n          <a className='mail-link' href='mailto:jumji19992412@gmail.com'>\r\n            jumji19992412@gmail.com\r\n          </a>\r\n        </span>\r\n        <p>And also you can find me in social networks &#8595;</p>\r\n        <Social />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","const particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 6,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    color: {\r\n      value: '#1b1e34'\r\n    },\r\n    shape: {\r\n      type: 'polygon',\r\n      stroke: {\r\n        width: 0,\r\n        color: '#000'\r\n      },\r\n      polygon: {\r\n        nb_sides: 6\r\n      },\r\n      image: {\r\n        src: 'img/github.svg',\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 160,\r\n      random: false,\r\n      anim: {\r\n        enable: true,\r\n        speed: 10,\r\n        size_min: 40,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: false,\r\n      distance: 200,\r\n      color: '#ffffff',\r\n      opacity: 1,\r\n      width: 2\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 8,\r\n      direction: 'none',\r\n      random: false,\r\n      straight: false,\r\n      out_mode: 'out',\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: 'canvas',\r\n    events: {\r\n      onhover: {\r\n        enable: false,\r\n        mode: 'grab'\r\n      },\r\n      onclick: {\r\n        enable: false,\r\n        mode: 'push'\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n};\r\nexport const particlesStyles = {\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'fixed',\r\n  left: '0',\r\n  zIndex: '-1',\r\n  top: '0'\r\n};\r\nexport default particlesOptions;\r\n","import App from './app';\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Particles from 'react-particles-js';\r\nimport Header from '../layout/header';\r\nimport Home from '../pages/home';\r\nimport Portfolio from '../pages/portfolio';\r\nimport Skills from '../pages/skills';\r\nimport Contacts from '../pages/contacts';\r\nimport particlesOptions, { particlesStyles } from './particles-options';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Particles params={particlesOptions} style={particlesStyles} />\r\n        <Header />\r\n        <div className='wrapper'>\r\n          <Switch>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/portfolio' component={Portfolio} />\r\n            <Route path='/skills' component={Skills} />\r\n            <Route path='/contacts' component={Contacts} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}