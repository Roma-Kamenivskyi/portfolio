{"version":3,"sources":["components/layout/header/logo.svg","db/header-links.js","components/layout/header/index.js","components/layout/header/header.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/layout/social/social-item.js","components/layout/social/index.js","components/layout/social/social.js","pages/home/index.js","pages/home/home.js","components/common/reference.js","components/layout/work-item/work-item.js","components/layout/works-list/index.js","components/layout/works-list/works-list.js","components/layout/spinner/index.js","components/layout/spinner/spinner.js","utills/fetchData.js","hooks/use-fetch.js","pages/portfolio/index.js","pages/portfolio/portfolio.js","components/layout/progress-bar/index.js","components/layout/progress-bar/progress-bar.js","components/layout/skills-list/index.js","components/layout/skills-list/skills-list.js","pages/skills/index.js","pages/skills/skills.js","pages/contacts/index.js","pages/contacts/contacts.js","pages/not-found/index.js","pages/not-found/not-found.js","routes.js","components/app/particles-options.js","components/app/index.js","components/app/app.js","serviceWorker.js","index.js"],"names":["module","exports","linksList","label","linkTo","Header","linkListRef","useRef","burgerButtonRef","className","to","src","logo","alt","style","width","height","ref","map","key","onClick","current","classList","toggle","Array","fill","_","idx","ErrorIndicator","ErrorBoundary","state","hasError","this","setState","props","children","Component","SocialItem","type","rest","aria-label","target","rel","aria-hidden","Social","href","Home","Reference","WorkItem","title","image","skills","link","repository","WorksList","React","memo","list","data","id","Spinner","fetchData","url","a","fetch","res","json","console","log","useState","loading","setLoading","error","setError","response","setResponse","useEffect","isCurrent","then","catch","handleError","warn","Portfolio","useFetch","ProgressBar","skill","percent","SkillsList","Skills","Contacts","NotFound","Routes","path","exact","component","particlesStyles","position","left","zIndex","top","particlesOptions","particles","number","value","density","enable","value_area","color","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","params","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1da16e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.92f673d7.svg\";","export const linksList = [\r\n  { label: 'Home', linkTo: '/' },\r\n  { label: 'Portfolio', linkTo: '/portfolio' },\r\n  { label: 'Skills', linkTo: '/skills' },\r\n  { label: 'Contacts', linkTo: '/contacts' }\r\n];\r\n","import Header from './header';\r\n\r\nexport default Header;\r\n","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { linksList } from '../../../db/header-links';\r\n\r\nimport logo from './logo.svg';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  const linkListRef = useRef();\r\n  const burgerButtonRef = useRef();\r\n\r\n  const toggleMobileNav = () => {\r\n    linkListRef.current.classList.toggle('active-mobile-nav');\r\n    burgerButtonRef.current.classList.toggle('active');\r\n  };\r\n\r\n  return (\r\n    <header className='header-app'>\r\n      <div className='wrapper'>\r\n        <nav className='navbar-app'>\r\n          <Link to='/' className='logo'>\r\n            <img\r\n              src={logo}\r\n              alt='logo'\r\n              style={{ width: '50px', height: '50px' }}\r\n            />\r\n          </Link>\r\n\r\n          <ul className='links-list' ref={linkListRef}>\r\n            {linksList.map(({ label, linkTo }) => (\r\n              <li key={label}>\r\n                <Link className='link' to={linkTo}>\r\n                  {label}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button\r\n            className='toggle-mobile-navbar'\r\n            onClick={toggleMobileNav}\r\n            ref={burgerButtonRef}\r\n          >\r\n            {Array(3)\r\n              .fill()\r\n              .map((_, idx) => (\r\n                <span className='burger-span' key={idx}></span>\r\n              ))}\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className='error'>\r\n      <i className='fas fa-exclamation-triangle error-icon'></i>\r\n      <p className='error-text'>Something went wrong!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundary from './error-boundary';\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SocialItem = ({ type, ...rest }) => (\r\n  <li className='social-item'>\r\n    <a\r\n      aria-label={`Link to ${type}`}\r\n      {...rest}\r\n      target='_blank'\r\n      rel='noopener noreferrer'\r\n    >\r\n      <i className={`fab fa-${type}`} aria-hidden='true'></i>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nSocialItem.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SocialItem;\r\n","import Social from './social';\r\n\r\nexport default Social;\r\n","import React from 'react';\r\n\r\nimport SocialItem from './social-item';\r\n\r\nimport './social.css';\r\n\r\nconst Social = () => (\r\n  <ul className='social-list'>\r\n    <SocialItem href='https://github.com/kamenivskyi' type='github' />\r\n    <SocialItem\r\n      href='https://www.linkedin.com/in/kamenivskyi'\r\n      type='linkedin'\r\n    />\r\n    <SocialItem href='https://t.me/Kamenivskyi' type='telegram' />\r\n  </ul>\r\n);\r\n\r\nexport default Social;\r\n","import Home from './home';\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport Social from '../../components/layout/social';\r\n\r\nimport './home.css';\r\n\r\nconst Home = () => (\r\n  <div className='introduction-page'>\r\n    <h1 className='name'>\r\n      <span className='name-top'>Roman</span>\r\n      <span className='name-bottom'>Kamenivskyi</span>\r\n    </h1>\r\n    <p className='text-intro'>\r\n      Hello<span className='c-white'>,</span> i am junior{' '}\r\n      <span className='c-white work-position'>front end developer !</span>\r\n    </p>\r\n    <Social />\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nexport const Reference = ({ children, ...rest }) => (\r\n  <a {...rest} target='_blank' rel='noopener noreferrer'>\r\n    {children}\r\n  </a>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Reference } from '../../common/reference';\r\n\r\nimport './work-item.css';\r\n\r\nconst WorkItem = ({ title, image, skills, link, repository }) => (\r\n  <li className='flip'>\r\n    <div className='work-item'>\r\n      <img className='work-face' src={image} alt={title} />\r\n      <div className='work-descr work-face back'>\r\n        <Reference href={link} className='work-title'>\r\n          {title}\r\n        </Reference>\r\n        <p className='work-skills'>{skills}</p>\r\n        <Reference href={repository} className='work-repo'>\r\n          Repository\r\n        </Reference>\r\n      </div>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nWorkItem.propTypes = {\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  skills: PropTypes.string,\r\n  link: PropTypes.string,\r\n  repository: PropTypes.string\r\n};\r\nexport default WorkItem;\r\n","import WorksList from './works-list';\r\nexport default WorksList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport WorkItem from '../work-item/work-item';\r\n\r\nconst WorksList = ({ list }) => {\r\n  return list && list.map(data => <WorkItem {...data} key={data.id} />);\r\n};\r\n\r\nWorksList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default React.memo(WorksList);\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => <div className='spinner'></div>;\r\n\r\nexport default Spinner;\r\n","export const fetchData = async url => {\r\n  const baseUrl =\r\n    'https://raw.githubusercontent.com/Kamenivskyi/portfolio/master/src/db';\r\n  try {\r\n    const res = await fetch(`${baseUrl}${url}`);\r\n    return res.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchData } from '../utills/fetchData';\r\n\r\nexport default url => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true;\r\n\r\n    fetchData(url)\r\n      .then(({ data }) => {\r\n        if (isCurrent) {\r\n          setResponse(data);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch(handleError);\r\n\r\n    return () => {\r\n      isCurrent = false;\r\n    };\r\n  }, [url]);\r\n\r\n  const handleError = error => {\r\n    setError(true);\r\n    setLoading(false);\r\n    console.warn(error);\r\n  };\r\n\r\n  return { response, loading, error };\r\n};\r\n","import Portfolio from './portfolio';\r\nexport default Portfolio;\r\n","import React from 'react';\r\n\r\nimport WorksList from '../../components/layout/works-list';\r\nimport Spinner from '../../components/layout/spinner';\r\n\r\nimport useFetch from '../../hooks/use-fetch';\r\n\r\nimport './portfolio.css';\r\n\r\nconst Portfolio = () => {\r\n  const { response, loading } = useFetch('/works.json');\r\n\r\n  return (\r\n    <>\r\n      <h2 className='section-title'>Portfolio</h2>\r\n      <ul className='works-list'>\r\n        {loading ? <Spinner /> : <WorksList list={response} />}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import ProgressBar from './progress-bar';\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './progress-bar.css';\r\n\r\nconst ProgressBar = ({ data: { skill, percent } }) => (\r\n  <div className='progress'>\r\n    <div className='progress-value' style={{ width: percent }}></div>\r\n    <span className='progress-skill-name'>{skill}</span>\r\n    <span className='progress-percent'>{percent}</span>\r\n  </div>\r\n);\r\n\r\nProgressBar.propTypes = {\r\n  data: PropTypes.shape({\r\n    skill: PropTypes.string,\r\n    percent: PropTypes.string\r\n  })\r\n};\r\nexport default ProgressBar;\r\n","import SkillsList from './skills-list';\r\n\r\nexport default SkillsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ProgressBar from '../progress-bar';\r\n\r\nconst SkillsList = ({ data }) => {\r\n  return (\r\n    data &&\r\n    data.map(skill => (\r\n      <li className='skill-item' key={skill.id}>\r\n        <ProgressBar data={skill} />\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nSkillsList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default React.memo(SkillsList);\r\n","import Skills from './skills';\r\nexport default Skills;\r\n","import React from 'react';\r\n\r\nimport Spinner from '../../components/layout/spinner';\r\nimport SkillsList from '../../components/layout/skills-list';\r\n\r\nimport useFetch from '../../hooks/use-fetch';\r\n\r\nimport './skills.css';\r\n\r\nconst Skills = () => {\r\n  const { loading, response } = useFetch('/skills.json');\r\n\r\n  return (\r\n    <>\r\n      <h2 className='section-title'>Skills</h2>\r\n      <ul className='skills-list'>\r\n        {loading ? <Spinner /> : <SkillsList data={response} />}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import Contacts from './contacts';\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nimport Social from '../../components/layout/social';\r\n\r\nimport './contacts.css';\r\n\r\nconst Contacts = () => (\r\n  <div className='contacts-wrapper'>\r\n    <h2 className='section-title'>Contacts</h2>\r\n    <div className='contacts'>\r\n      <p>You can contact me below &#8595;</p>\r\n      <span className='mail'>\r\n        E-mail: &nbsp;\r\n        <a className='mail-link' href='mailto:jumji19992412@gmail.com'>\r\n          jumji19992412@gmail.com\r\n        </a>\r\n      </span>\r\n      <p>And also you can find me in social networks &#8595;</p>\r\n      <Social />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Contacts;\r\n","import NotFound from './not-found';\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nimport './not-found.css';\r\n\r\nconst NotFound = () => (\r\n  <div className='not-found'>\r\n    <h1>Not Found</h1>\r\n    <p>The page you are looking for does not exist!</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/home';\r\nimport Portfolio from './pages/portfolio';\r\nimport Skills from './pages/skills';\r\nimport Contacts from './pages/contacts';\r\nimport NotFound from './pages/not-found';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route path='/' exact component={Home} />\r\n    <Route path='/portfolio' component={Portfolio} />\r\n    <Route path='/skills' component={Skills} />\r\n    <Route path='/contacts' component={Contacts} />\r\n    <Route component={NotFound} />\r\n  </Switch>\r\n);\r\nexport default Routes;\r\n","const particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 6,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    color: {\r\n      value: '#1b1e34'\r\n    },\r\n    shape: {\r\n      type: 'polygon',\r\n      stroke: {\r\n        width: 0,\r\n        color: '#000'\r\n      },\r\n      polygon: {\r\n        nb_sides: 6\r\n      },\r\n      image: {\r\n        src: 'img/github.svg',\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 160,\r\n      random: false,\r\n      anim: {\r\n        enable: true,\r\n        speed: 10,\r\n        size_min: 40,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: false,\r\n      distance: 200,\r\n      color: '#ffffff',\r\n      opacity: 1,\r\n      width: 2\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 8,\r\n      direction: 'none',\r\n      random: false,\r\n      straight: false,\r\n      out_mode: 'out',\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: 'canvas',\r\n    events: {\r\n      onhover: {\r\n        enable: false,\r\n        mode: 'grab'\r\n      },\r\n      onclick: {\r\n        enable: false,\r\n        mode: 'push'\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n};\r\nexport const particlesStyles = {\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'fixed',\r\n  left: '0',\r\n  zIndex: '-1',\r\n  top: '0'\r\n};\r\nexport default particlesOptions;\r\n","import App from './app';\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport Header from '../layout/header';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport Routes from '../../routes';\r\nimport particlesOptions, { particlesStyles } from './particles-options';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => (\r\n  <ErrorBoundary>\r\n    <Router>\r\n      <div className='App'>\r\n        <Particles params={particlesOptions} style={particlesStyles} />\r\n        <Header />\r\n        <div className='wrapper'>\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </ErrorBoundary>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}